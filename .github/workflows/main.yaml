name: Bsale Challenge - CI/CD FastApi AWS lambda
on:
  push:
    branches:
      - main 

jobs:
  CI:
    runs-on: ubuntu-latest

    steps:
      # Check out repo so our workflow can access it
      - uses: actions/checkout@v4
      
      # Step-1 Setup Python
      - name: Set up Python
        # This action sets up a Python environment for use in actions
        uses: actions/setup-python@v5
        with:
          python-version: 3.9.23
          # optional: architecture: x64 x64 or x86. Defaults to x64 if not specified

      # Step-2 Install Python Virtual ENV
      - name: Install Python Virtual ENV
        run: pip3 install virtualenv

      # Step-3 Setup Virtual ENV
      # https://docs.github.com/en/actions/guides/caching-dependencies-to-speed-up-workflows
      - name:  Virtual ENV
        uses: actions/cache@v4
        id: cache-venv # name for referring later
        with:
          path: venv # what we cache: the Virtual ENV
          # The cache key depends on requirements.txt
          key: ${{ runner.os }}-venv-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-venv-

      # Step-4 Build a Virtual ENV, but only if it doesn't already exist
      - name: Activate Virtual ENV
        run: python -m venv venv && source venv/bin/activate && pip3 install -r requirements.txt
        if: steps.cache-venv.outputs.cache-hit != 'true'
    
  CD:
    runs-on: ubuntu-latest
    needs: [CI]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      # Step-5 Deploy to AWS
      - name: Deploy to AWS server
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.AWS_HOST }}
          username: ${{ secrets.AWS_USER }}
          key: ${{ secrets.AWS_SSH_KEY }}
          script: |
            cd /var/www/bsale-challenge   # Ruta donde est√° tu proyecto
            git pull origin main
            python3 -m venv .venv
            source .venv/bin/activate
            pip install -r requirements.txt
            sudo systemctl restart bsale-challenge
            sudo systemctl status bsale-challenge --no-pager
